// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  testHistories TestHistory[]
}

model TestHistory {
  id               Int               @id @default(autoincrement())
  userId           Int
  user             User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  questionsAttempted Int
  totalcorrectAnswers    Int
  percentage        Float
  testDate          DateTime         @default(now())
  rounds           TestRound[]
}

model TestRound{
  id               Int               @id @default(autoincrement())
  testHistoryId    Int
  testHistory      TestHistory       @relation(fields: [testHistoryId], references: [id], onDelete: Cascade)
  roundType        RoundType
  questionsAttempted Int
  correctAnswers    Int
  percentage        Float
  roundDate        DateTime          @default(now())
  questions        Question[]
}

model Question {
  id               Int       @id @default(autoincrement())
  testRoundId      Int
  testRound        TestRound @relation(fields: [testRoundId], references: [id], onDelete: Cascade)
  roundType        RoundType
  questionText     String
  options       String[] 
  userAnswer       String? 
  correctAnswer String    
}

enum RoundType {
  APTITUDE
  DSA_BASIC
  DSA_ADVANCED
}


model Admin {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())

}
